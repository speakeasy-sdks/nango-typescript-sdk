/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as z from "zod";

export type GetConnectionsRequest = {
    /**
     * The connection ID used to create the connection.
     */
    connectionId: string;
    /**
     * The integration ID used to create the connection (aka Unique Key).
     */
    providerConfigKey: string;
    /**
     * If true, Nango will attempt to refresh the access access token regardless of its expiration status (false by default).
     */
    forceRefresh?: boolean | undefined;
    /**
     * If true, return the refresh token as part of the response (false by default).
     */
    refreshToken?: boolean | undefined;
};

/** @internal */
export namespace GetConnectionsRequest$ {
    export const inboundSchema: z.ZodType<GetConnectionsRequest, z.ZodTypeDef, unknown> = z
        .object({
            connectionId: z.string(),
            provider_config_key: z.string(),
            force_refresh: z.boolean().optional(),
            refresh_token: z.boolean().optional(),
        })
        .transform((v) => {
            return remap$(v, {
                provider_config_key: "providerConfigKey",
                force_refresh: "forceRefresh",
                refresh_token: "refreshToken",
            });
        });

    export type Outbound = {
        connectionId: string;
        provider_config_key: string;
        force_refresh?: boolean | undefined;
        refresh_token?: boolean | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetConnectionsRequest> = z
        .object({
            connectionId: z.string(),
            providerConfigKey: z.string(),
            forceRefresh: z.boolean().optional(),
            refreshToken: z.boolean().optional(),
        })
        .transform((v) => {
            return remap$(v, {
                providerConfigKey: "provider_config_key",
                forceRefresh: "force_refresh",
                refreshToken: "refresh_token",
            });
        });
}
