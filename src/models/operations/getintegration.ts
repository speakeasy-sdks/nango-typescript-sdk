/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as z from "zod";

export type GetIntegrationRequest = {
    /**
     * The integration ID that you created in Nango.
     */
    providerConfigKey: string;
    /**
     * If true, the response will contain the client ID, secret, scopes, auth_mode and app link - if applicable. include_creds is false by default.
     */
    includeCreds?: boolean | undefined;
};

/** @internal */
export namespace GetIntegrationRequest$ {
    export const inboundSchema: z.ZodType<GetIntegrationRequest, z.ZodTypeDef, unknown> = z
        .object({
            providerConfigKey: z.string(),
            include_creds: z.boolean().optional(),
        })
        .transform((v) => {
            return remap$(v, {
                include_creds: "includeCreds",
            });
        });

    export type Outbound = {
        providerConfigKey: string;
        include_creds?: boolean | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetIntegrationRequest> = z
        .object({
            providerConfigKey: z.string(),
            includeCreds: z.boolean().optional(),
        })
        .transform((v) => {
            return remap$(v, {
                includeCreds: "include_creds",
            });
        });
}
