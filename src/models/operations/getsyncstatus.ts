/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as z from "zod";

export type GetSyncStatusRequest = {
    /**
     * The ID of the integration you established within Nango
     */
    providerConfigKey: string;
    /**
     * The name of the syncs you want to fetch a status for. Pass in "*" to return all syncs per the integration
     */
    syncs: string;
    /**
     * The ID of the connection. If omitted, all connections will be surfaced.
     */
    connectionId?: string | undefined;
};

/** @internal */
export namespace GetSyncStatusRequest$ {
    export const inboundSchema: z.ZodType<GetSyncStatusRequest, z.ZodTypeDef, unknown> = z
        .object({
            provider_config_key: z.string(),
            syncs: z.string(),
            connection_id: z.string().optional(),
        })
        .transform((v) => {
            return remap$(v, {
                provider_config_key: "providerConfigKey",
                connection_id: "connectionId",
            });
        });

    export type Outbound = {
        provider_config_key: string;
        syncs: string;
        connection_id?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetSyncStatusRequest> = z
        .object({
            providerConfigKey: z.string(),
            syncs: z.string(),
            connectionId: z.string().optional(),
        })
        .transform((v) => {
            return remap$(v, {
                providerConfigKey: "provider_config_key",
                connectionId: "connection_id",
            });
        });
}
