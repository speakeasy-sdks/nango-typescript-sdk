/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

export type Items = {};

export type IntegrationsResponse200 = {
    configs: Array<any>;
    items?: Items | undefined;
};

/** @internal */
export namespace Items$ {
    export const inboundSchema: z.ZodType<Items, z.ZodTypeDef, unknown> = z.object({});

    export type Outbound = {};

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, Items> = z.object({});
}

/** @internal */
export namespace IntegrationsResponse200$ {
    export const inboundSchema: z.ZodType<IntegrationsResponse200, z.ZodTypeDef, unknown> =
        z.object({
            configs: z.array(z.any()),
            items: z.lazy(() => Items$.inboundSchema).optional(),
        });

    export type Outbound = {
        configs: Array<any>;
        items?: Items$.Outbound | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, IntegrationsResponse200> =
        z.object({
            configs: z.array(z.any()),
            items: z.lazy(() => Items$.outboundSchema).optional(),
        });
}
