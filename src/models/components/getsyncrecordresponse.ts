/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives";
import * as z from "zod";

/**
 * The last action seen on this record
 */
export enum LastAction {
    Added = "ADDED",
    Updated = "UPDATED",
    Deleted = "DELETED",
}

export type NangoMetadata = {
    /**
     * The timestamp at which Nango detected the record as deleted
     */
    deletedAt?: string | undefined;
    /**
     * The last action seen on this record
     */
    lastAction?: LastAction | undefined;
    /**
     * The timestamp at which Nango first saw this record
     */
    firstSeenAt?: string | undefined;
    /**
     * The timestamp at which Nango last detected a change to this record
     */
    lastModifiedAt?: string | undefined;
};

export type GetSyncRecordResponse = {
    /**
     * The data Nango synced in for you
     */
    yourProperties?: string | undefined;
    nangoMetadata?: NangoMetadata | undefined;
};

/** @internal */
export namespace LastAction$ {
    export const inboundSchema = z.nativeEnum(LastAction);
    export const outboundSchema = inboundSchema;
}

/** @internal */
export namespace NangoMetadata$ {
    export const inboundSchema: z.ZodType<NangoMetadata, z.ZodTypeDef, unknown> = z
        .object({
            deleted_at: z.string().optional(),
            last_action: LastAction$.inboundSchema.optional(),
            first_seen_at: z.string().optional(),
            last_modified_at: z.string().optional(),
        })
        .transform((v) => {
            return remap$(v, {
                deleted_at: "deletedAt",
                last_action: "lastAction",
                first_seen_at: "firstSeenAt",
                last_modified_at: "lastModifiedAt",
            });
        });

    export type Outbound = {
        deleted_at?: string | undefined;
        last_action?: string | undefined;
        first_seen_at?: string | undefined;
        last_modified_at?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, NangoMetadata> = z
        .object({
            deletedAt: z.string().optional(),
            lastAction: LastAction$.outboundSchema.optional(),
            firstSeenAt: z.string().optional(),
            lastModifiedAt: z.string().optional(),
        })
        .transform((v) => {
            return remap$(v, {
                deletedAt: "deleted_at",
                lastAction: "last_action",
                firstSeenAt: "first_seen_at",
                lastModifiedAt: "last_modified_at",
            });
        });
}

/** @internal */
export namespace GetSyncRecordResponse$ {
    export const inboundSchema: z.ZodType<GetSyncRecordResponse, z.ZodTypeDef, unknown> = z
        .object({
            "your-properties": z.string().optional(),
            _nango_metadata: z.lazy(() => NangoMetadata$.inboundSchema).optional(),
        })
        .transform((v) => {
            return remap$(v, {
                "your-properties": "yourProperties",
                _nango_metadata: "nangoMetadata",
            });
        });

    export type Outbound = {
        "your-properties"?: string | undefined;
        _nango_metadata?: NangoMetadata$.Outbound | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetSyncRecordResponse> = z
        .object({
            yourProperties: z.string().optional(),
            nangoMetadata: z.lazy(() => NangoMetadata$.outboundSchema).optional(),
        })
        .transform((v) => {
            return remap$(v, {
                yourProperties: "your-properties",
                nangoMetadata: "_nango_metadata",
            });
        });
}
